name: Java

on:
  pull_request:
    branches: ["main"]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: GitHub Action for GraalVM
        uses: graalvm/setup-graalvm@v1.2.1
        with:
          java-version: "17"
          distribution: "graalvm" # optional, default is
          native-image-job-reports: "true"
          cache: "maven"
    #   - name: Generate Native Image
    #     run: |
    #       mvn package -Dnative -DskipTests
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@v2.3.0
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.TOKEN_GITHUB }}
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: Build File
          path: |
            target/*-runner
            target/site/jacoco/jacoco.xml

  unit_tests:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4
      - name: GitHub Action for GraalVM
        uses: graalvm/setup-graalvm@v1.2.1
        with:
          java-version: "17"
          distribution: "graalvm" # optional, default is
          native-image-job-reports: "true"
          cache: "maven"
      - name: Generate Native Image
        run: |
          mvn test

  docker_image:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4
      - name: Download Artifact
        uses: actions/download-artifact@v4
        with:
          name: Build File
          path: .
      - name: Log in to Docker Hub
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Get short SHA
        id: shortsha
        run: |
          echo "SHORT_SHA=$(echo $GITHUB_SHA | cut -c1-6)" >> $GITHUB_ENV
          echo "SHORT_SHA=$(echo $GITHUB_SHA | cut -c1-6)" >> $GITHUB_OUTPUT
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: rolo96/neoris
          tags: |
            type=raw,value=${{ env.SHORT_SHA }},priority=100
      - name: Build and Push Docker Image
        id: push
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@0.20.0
        with:
          image-ref: 'docker.io/rolo96/neoris:${{ env.SHORT_SHA }}'
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'
        continue-on-error: true
    outputs:
      shortsha: ${{ steps.shortsha.outputs.SHORT_SHA }}

  deploy_to_eks:
    name: Deploy manifests to EKS
    runs-on: ubuntu-latest
    needs: docker_image
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Update kubeconfig
        run: |
          aws eks update-kubeconfig --name ${{ secrets.EKS_CLUSTER_NAME }}

      - name: Deploy to EKS
        run: |
          sed -i 's|{{COMMIT}}|${{ needs.docker_image.outputs.shortsha }}|' manifests/4deployment.yml
          kubectl apply -f manifests
